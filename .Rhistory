setwd("/Users/ginny")
install("SeqQuery")
?file.rename
sample(seq(1:100),10)
vep_unique_annotation = vep_20 %>%
dplyr::group_by(Location, ID, agg_sample_id) %>%
dplyr::top_n(n = 1, wt = Amino_acids)%>%
set.seed(123)
?barplot
?readLines
2^14
?abline
?text
?abline
?text
?rbind
rbind(1,2,3,4)
?text
?legend
plot(c(0,1), c(0,1), col = 1, type = "l")
plot(c(0,1), c(0,1), col = 2, type = "l")
?rnorm
?matrix
?jitter
get_col = c('#e41a1c80', '#377eb880','#4daf4a80','#984ea380','#ff7f0080','#ffff3380','#a6562880','#f781bf80','#99999980')
plot(x = c(1:9), y = rep(1,9), col = get_col)
plot(x = c(1:9), y = rep(1,9), col = get_col, pch = 16)
?plot
?lines
4/30
2^14
?heatmap.2
??heatmap.2
?abline()
?which
c = c(1,2,1,3,4,NA)
c
which(c>2)
which(c>5)
length(which(c>5))
755*1024/4
755*1024/4/3600
661+9.6*56+1.72*168-4.7*26
1365.36*1.5
2048*0.9
-log10(0.05)
library(dplyr)
library(table.table)
library(magrittr)
scancer = fread("/data/ginny/tcga_pancan/important_files/cancer_type_clinical/SKCM_clinical.tsv",
stringsAsFactors = F)
primary_id = scancer%>%
dplyr::filter(tumor_tissue_site.1 == "Primary Tumor")
cdr = fread("/data/ginny/tcga_pancan/important_files/TCGA_CDR.tsv",
stringsAsFactors = F)
primary_skcm = cdr %>%
dplyr::filter(type == "SKCM")%>%
dplyr::filter(bcr_patient_barcode %in% primary_id$bcr_patient_barcode)
write.table(primary_skcm, "/data/ginny/tcga_pancan/important_files/primary_skcm_cdr.tsv",
quote = F, row.names = F, sep = "\t")
## now use this as the clinical information for SKCM patients
## first mapping of variants somatic and germline to PIUs
### from the result file I will just keep those patients only
somatic_piu = fread("/data/ginny/tcga_pancan/TCGA_all/SKCM_somatic/SKCM_summarise_mutation_201901")
library(dplyr)
library(table.table)
library(magrittr)
scancer = fread("/data/ginny/tcga_pancan/important_files/cancer_type_clinical/SKCM_clinical.tsv",
stringsAsFactors = F)
primary_id = scancer%>%
dplyr::filter(tumor_tissue_site.1 == "Primary Tumor")
cdr = fread("/data/ginny/tcga_pancan/important_files/TCGA_CDR.tsv",
stringsAsFactors = F)
primary_skcm = cdr %>%
dplyr::filter(type == "SKCM")%>%
dplyr::filter(bcr_patient_barcode %in% primary_id$bcr_patient_barcode)
write.table(primary_skcm, "/data/ginny/tcga_pancan/important_files/primary_skcm_cdr.tsv",
quote = F, row.names = F, sep = "\t")
## now use this as the clinical information for SKCM patients
## first mapping of variants somatic and germline to PIUs
### from the result file I will just keep those patients only
somatic_piu = fread("/data/ginny/tcga_pancan/TCGA_all/SKCM_somatic/SKCM_summarise_mutation_201901")
library(dplyr)
library(table.table)
library(magrittr)
2330645/(2330645+1849242)
880/929
369/427
15913/17085
17086-15913
49/929
58/427
1173/17086
10086/18070
51/75
52/74
69/72
log2(1.5)
library(GPD)
extraction_annotation_pos
extraction_annotation_pos(mutation_df = sel_acc_mutation,
cancer_type = "ACC",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
remove.packages(
"GPD"
)
devtools::install_github("ginnyintifa/GPD")
library(GPD)
extraction_annotation_pos(mutation_df = sel_acc_mutation,
cancer_type = "ACC",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
devtools::install_github("ginnyintifa/GPD")
library(GPD)
devtools::install_github("ginnyintifa/GPD", force = T)
library(GPD)
extraction_annotation_pos(mutation_df = sel_acc_mutation,
cancer_type = "ACC",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
extraction_annotation_pos(mutation_df = sel_acc_mutation,
cancer_type = "ACC",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
remove.packages("GPD"
)
devtools::install_github("ginnyintifa/GPD", force = T)
library(GPD)
extraction_annotation_pos(mutation_df = sel_acc_mutation,
cancer_type = "ACC",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
remove.packages(GPD)
remove.packages("GPD")
devtools::install_github("ginnyintifa/GPD", force = T)
extraction_annotation_pos(mutation_df = sel_acc_mutation,
cancer_type = "ACC",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
extraction_annotation_pos
setwd("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/GPD")
document()
library("devtools")
devtools::install_github("klutometis/roxygen")
library(roxygen2)
setwd("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/GPD")
document()
remove.packages("GPD")
devtools::install_github("ginnyintifa/GPD", force = T)
library(GPD)
library(GPD)
extraction_annotation_pos
extraction_annotation_pos(mutation_df = sel_acc_mutation,
cancer_type = "ACC",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
extraction_annotation_pos(mutation_df = sel_acc_mutation,
cancer_type = "ACC",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
piu_mapping(piu_df = ptm_pfam_combine,
pc_data_name = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/ACC_mutation_pc_pos.tsv",
npc_data_name = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/ACC_mutation_npc.tsv",
cancer_barcode = sel_acc_barcode,
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
piu_mapping(piu_df = ptm_pfam_combine,
pc_data_name = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/ACC_mutation_pc_pos.tsv",
npc_data_name = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/ACC_mutation_npc.tsv",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
univariate_cox_model(piu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/piu_mapping_count.tsv",
lu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/lu_summarising_count.tsv",
ncu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/ncu_summarising_count.tsv",
clinical_df = sel_acc_cdr,
gender_as_covariate = T,
race_group_min = 6,
min_surv_days = 90,
min_surv_people = 5,
patient_sum_min = 3,
mutation_type = "somatic",
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
sel_acc_cdr
setwd("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/GPD")
document()
remove.packages(
"GPD"
)
devtools::install_github("ginnyintifa/GPD", force = T)
library(GPD)
univariate_cox_model()
univariate_cox_model
extraction_annotation_pos(mutation_df = sel_acc_mutation,
cancer_type = "ACC",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
piu_mapping(piu_df = ptm_pfam_combine,
pc_data_name = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/ACC_mutation_pc_pos.tsv",
npc_data_name = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/ACC_mutation_npc.tsv",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
univariate_cox_model(piu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/piu_mapping_count.tsv",
lu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/lu_summarising_count.tsv",
ncu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/ncu_summarising_count.tsv",
clinical_df = sel_acc_cdr,
gender_as_covariate = T,
race_group_min = 6,
min_surv_days = 90,
min_surv_people = 5,
patient_sum_min = 3,
mutation_type = "somatic",
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
extraction_annotation_pos(mutation_df = sel_acc_mutation,
cancer_type = "ACC",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
extraction_annotation_pos(mutation_df = sel_acc_mutation,
cancer_type = "ACC",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
extraction_annotation_pos
extraction_annotation_pos(mutation_df = sel_acc_mutation,
cancer_type = "ACC",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
setwd("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/GPD")
document()
setwd("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/GPD")
document()
remove.packages("GPD"
)
devtools::install_github("ginnyintifa/GPD", force = T)
library(GPD)
extraction_annotation_pos(mutation_df = sel_acc_mutation,
cancer_type = "ACC",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
piu_mapping(piu_df = ptm_pfam_combine,
pc_data_name = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/ACC_mutation_pc_pos.tsv",
npc_data_name = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/ACC_mutation_npc.tsv",
cancer_barcode = unique(sel_acc_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
univariate_cox_model(piu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/piu_mapping_count.tsv",
lu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/lu_summarising_count.tsv",
ncu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/ncu_summarising_count.tsv",
clinical_df = sel_acc_cdr,
gender_as_covariate = T,
race_group_min = 6,
min_surv_days = 90,
min_surv_people = 5,
patient_sum_min = 3,
mutation_type = "somatic",
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/ACC_example/")
setwd("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/GPD")
document()
-log10(0.05)
-log10(0.00004)
col_seq = seq(1:ncol(piu_count_df))
col_seq = seq(1:5)
col_seq
which_count = col_seq[-c(1:8,ncol(piu_count_df))]
which_count = col_seq[-c(1:8,10)]
col_seq = seq(1:20)
which_count = col_seq[-c(1:8,20)]
which_count
c = c("adf","df","aew")
grep("a",c)
acc_cdr = fread("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/acc_files/acc_cdr.tsv",
stringsAsFactors = F)
set.seed(123)
sel_rows = sample(nrow(acc_cdr),50)
sel_acc_cdr = acc_cdr[sel_rows,-1]
### rename the subjects
name_dic = rbindlist(lapply(1:nrow(sel_acc_cdr), function(x) {
ori_name = sel_acc_cdr$bcr_patient_barcode[x]
new_name = paste0("example-", x)
name_dic_df = data.frame(ori_name, new_name, stringsAsFactors = F)
return(name_dic_df)
}))
sel_acc_cdr$bcr_patient_barcode = name_dic$new_name
write.table(sel_acc_cdr, "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/acc_files/selected_example_cdr.tsv",
row.names = F, quote = F, sep  = "\t")
acc_mutation = fread("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/acc_files/acc_mutation.tsv",
stringsAsFactors = F)
sel_acc_mutation = acc_mutation%>%
dplyr::filter(barcode %in% name_dic$ori_name)%>%
dplyr::left_join(name_dic, by = c("barcode" = "ori_name"))%>%
dplyr::select(-barcode)%>%
dplyr::rename(barcode = new_name)
write.table(sel_acc_mutation, "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/acc_files/selected_example_mutation.tsv",
row.names = F, quote = F, sep  = "\t")
setwd("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/GPD")
sel_example_mutation = fread("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/acc_files/selected_example_mutation.tsv", stringsAsFactors = F)
devtools::use_data(sel_example_mutation)
sel_example_cdr = fread("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/acc_files/selected_example_cdr.tsv", stringsAsFactors = F)
devtools::use_data(sel_example_cdr)
sel_acc_mutation = acc_mutation%>%
dplyr::filter(barcode %in% name_dic$ori_name)%>%
dplyr::left_join(name_dic, by = c("barcode" = "ori_name"))%>%
dplyr::mutate(type = "example")%>%
dplyr::select(-barcode)%>%
dplyr::rename(barcode = new_name)
sel_acc_mutation = acc_mutation%>%
dplyr::filter(barcode %in% name_dic$ori_name)%>%
dplyr::left_join(name_dic, by = c("barcode" = "ori_name"))%>%
# dplyr::mutate(type = "example")%>%
dplyr::select(-barcode)%>%
dplyr::rename(barcode = new_name)
sel_acc_cdr$type = "example"
sel_acc_cdr[1,]
write.table(sel_acc_cdr, "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/acc_files/selected_example_cdr.tsv",
row.names = F, quote = F, sep  = "\t")
sel_example_cdr = fread("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/acc_files/selected_example_cdr.tsv", stringsAsFactors = F)
devtools::use_data(sel_example_cdr)
setwd("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/GPD")
document()
remove.packages("GPD")
devtools::install_github("ginnyintifa/GPD", force = T)
library(GPD)
extraction_annotation_pos(mutation_df = sel_example_mutation,
cancer_type = "example",
cancer_barcode = unique(sel_example_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/")
sel_example_mutation[1,]
sel_acc_mutation = acc_mutation%>%
dplyr::filter(barcode %in% name_dic$ori_name)%>%
dplyr::left_join(name_dic, by = c("barcode" = "ori_name"))%>%
# dplyr::mutate(type = "example")%>%
dplyr::select(-barcode)%>%
dplyr::rename(Tumor_Sample_Barcode = new_name)
write.table(sel_acc_mutation, "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/acc_files/selected_example_mutation.tsv",
row.names = F, quote = F, sep  = "\t")
setwd("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/GPD")
sel_example_mutation = fread("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/acc_files/selected_example_mutation.tsv", stringsAsFactors = F)
devtools::use_data(sel_example_mutation)
remove.packages("GPD")
devtools::install_github("ginnyintifa/GPD", force = T)
library(GPD)
sel_example_mutation[1,]
extraction_annotation_pos(mutation_df = sel_example_mutation,
cancer_type = "example",
cancer_barcode = unique(sel_example_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/")
piu_mapping(piu_df = ptm_pfam_combine,
pc_data_name = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/example_mutation_pc_pos.tsv",
npc_data_name = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/example_mutation_npc.tsv",
cancer_barcode = unique(sel_example_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/")
univariate_cox_model(piu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/piu_mapping_count.tsv",
lu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/lu_summarising_count.tsv",
ncu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/ncu_summarising_count.tsv",
clinical_df = sel_example_cdr,
gender_as_covariate = T,
race_group_min = 6,
min_surv_days = 90,
min_surv_people = 5,
patient_sum_min = 3,
mutation_type = "somatic",
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/")
sel_example_cdr[1,]
colnames(sel_acc_cdr)[1] = "Tumor_Sample_Barcode"
sel_acc_cdr[1,]
write.table(sel_acc_cdr, "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/acc_files/selected_example_cdr.tsv",
row.names = F, quote = F, sep  = "\t")
sel_example_cdr = fread("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/acc_files/selected_example_cdr.tsv", stringsAsFactors = F)
devtools::use_data(sel_example_cdr)
setwd("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/GPD")
document()
remove.packages("GPD")
devtools::install_github("ginnyintifa/GPD", force = T)
library(GPD)
sel_example_cdr[1,]
extraction_annotation_pos(mutation_df = sel_example_mutation,
cancer_type = "example",
cancer_barcode = unique(sel_example_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/")
piu_mapping(piu_df = ptm_pfam_combine,
pc_data_name = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/example_mutation_pc_pos.tsv",
npc_data_name = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/example_mutation_npc.tsv",
cancer_barcode = unique(sel_example_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/")
univariate_cox_model(piu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/piu_mapping_count.tsv",
lu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/lu_summarising_count.tsv",
ncu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/ncu_summarising_count.tsv",
clinical_df = sel_example_cdr,
gender_as_covariate = T,
race_group_min = 6,
min_surv_days = 90,
min_surv_people = 5,
patient_sum_min = 3,
mutation_type = "somatic",
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/")
sel_example_cdr[1,]
colnames(sel_acc_cdr)[1] = "Tumor_Sample_Barcode"
colnames(sel_acc_cdr)[3] = "age"
sel_acc_cdr$type = "example"
write.table(sel_acc_cdr, "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/acc_files/selected_example_cdr.tsv",
row.names = F, quote = F, sep  = "\t")
sel_acc_cdr[1,]
sel_example_cdr = fread("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/acc_files/selected_example_cdr.tsv", stringsAsFactors = F)
devtools::use_data(sel_example_cdr)
setwd("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/GPD")
document()
remove.packages("GPD")
devtools::install_github("ginnyintifa/GPD", force = T)
library(GPD)
sel_example_cdr[1,]
extraction_annotation_pos(mutation_df = sel_example_mutation,
cancer_type = "example",
cancer_barcode = unique(sel_example_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/")
piu_mapping(piu_df = ptm_pfam_combine,
pc_data_name = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/example_mutation_pc_pos.tsv",
npc_data_name = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/example_mutation_npc.tsv",
cancer_barcode = unique(sel_example_mutation$Tumor_Sample_Barcode),
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/")
univariate_cox_model(piu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/piu_mapping_count.tsv",
lu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/lu_summarising_count.tsv",
ncu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/ncu_summarising_count.tsv",
clinical_df = sel_example_cdr,
gender_as_covariate = T,
race_group_min = 6,
min_surv_days = 90,
min_surv_people = 5,
patient_sum_min = 3,
mutation_type = "somatic",
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/")
piu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/piu_mapping_count.tsv"
lu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/lu_summarising_count.tsv"
ncu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/ncu_summarising_count.tsv"
clinical_df = sel_example_cdr
gender_as_covariate = T
race_group_min = 6
min_surv_days = 90
min_surv_people = 5
patient_sum_min = 3
mutation_type = "somatic"
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/"
lu_filename = lu_filename
cdr_clinical = clinical_df
gender_as_covariate = gender_as_covariate
race_group_min = race_group_min
min_surv_days = min_surv_days
min_surv_people = min_surv_people
patient_sum_min = patient_sum_min
mutation_type = mutation_type
output_dir = output_dir
gene_count_filename = lu_filename
cdr_clinical = cdr_clinical
patient_sum_min = patient_sum_min
output_dir = output_dir
output_name = paste0(mutation_type,"_lu_cdr_clinical_unite.tsv")
gene_count_df = fread(gene_count_filename,
stringsAsFactors = F)
gene_count_df[1,]
if("gene_info" %in% colnames(gene_count_df))
{
gene_count_df_info = as_tibble(gene_count_df)
}else{
gene_count_df_info = gene_count_df %>%
dplyr::mutate(gene_info = paste(gene_name, gene_id, sep = "_"))
}
gene_count_info[1,]
gene_count_df_info[1,]
gene_count_df = fread(gene_count_filename,
stringsAsFactors = F)
if("gene_info" %in% colnames(gene_count_df))
{
gene_count_df_info = as_tibble(gene_count_df)%>%
dplyr::select(gene_id, gene_name, gene_info, everything())
}else{
gene_count_df_info = gene_count_df %>%
dplyr::mutate(gene_info = paste(gene_name, gene_id, sep = "_"))%>%
dplyr::select(gene_id, gene_name, gene_info, everything())
}
gene_count_df_info[1,]
col_seq = seq(1:ncol(gene_count_df))
which_count = col_seq[-c(1:3,ncol(gene_count_df))]
which_count
non_zero = apply(gene_count_df_info[,which_count],1,nonzero)
gene_count_sel = gene_count_df_info[which(non_zero>=patient_sum_min),]
gene_count_sel[1,]
col_seq = seq(1:ncol(gene_count_sel))
which_barcode = col_seq[-c(1:3,ncol(gene_count_sel))]
#which_barco
which_barcode
ncol(gene_count_df_info)
ncol(gene_count_sel)
col_seq = seq(1:ncol(gene_count_df_info))
which_count = col_seq[-c(1:3,ncol(gene_count_df_info))]
which_count
non_zero = apply(gene_count_df_info[,which_count],1,nonzero)
gene_count_sel = gene_count_df_info[which(non_zero>=patient_sum_min),]
col_seq = seq(1:ncol(gene_count_sel))
which_barcode = col_seq[-c(1:3,ncol(gene_count_sel))]
which_barcode
setwd("/Users/ginny/Google Drive/R_GPD/GPD_package_0401/GPD")
document()
remove.packages("GPD")
devtools::install_github("ginnyintifa/GPD", force = T)
library(GPD)
univariate_cox_model(piu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/piu_mapping_count.tsv",
lu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/lu_summarising_count.tsv",
ncu_filename = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/ncu_summarising_count.tsv",
clinical_df = sel_example_cdr,
gender_as_covariate = T,
race_group_min = 6,
min_surv_days = 90,
min_surv_people = 5,
patient_sum_min = 3,
mutation_type = "somatic",
output_dir = "/Users/ginny/Google Drive/R_GPD/GPD_package_0401/example/")
